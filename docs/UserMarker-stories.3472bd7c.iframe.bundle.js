"use strict";(self.webpackChunkIOT_Map_Component=self.webpackChunkIOT_Map_Component||[]).push([[248],{"./src/stories/UserMarker.stories.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.r(__webpack_exports__),__webpack_require__.d(__webpack_exports__,{UserMarker:()=>UserMarker,__namedExportsOrder:()=>__namedExportsOrder,default:()=>__WEBPACK_DEFAULT_EXPORT__});var iotmapmanager_dist__WEBPACK_IMPORTED_MODULE_0__=__webpack_require__("./src/iotMapManager/dist/index.js");__webpack_require__("./src/stories/stories.css");let userMarker={location:[44.895,4.87],direction:0,accuracy:150};const __WEBPACK_DEFAULT_EXPORT__={title:"UserMarker",parameters:{layout:"fullscreen"}};function update(){let config=new iotmapmanager_dist__WEBPACK_IMPORTED_MODULE_0__.IotMapConfig,mapManager=new iotmapmanager_dist__WEBPACK_IMPORTED_MODULE_0__.IotMapManager(config),markerManager=new iotmapmanager_dist__WEBPACK_IMPORTED_MODULE_0__.IotMapUserMarkerManager(mapManager,config);mapManager.init("iotMap"),markerManager.addUserMarker(userMarker),removeEventListener("DOMContentLoaded",update)}const UserMarker={argTypes:{accuracy:{control:{step:20,type:"number",value:userMarker.accuracy},name:"accuracy"},direction:{control:{max:360,min:0,step:10,type:"range",value:userMarker.direction},name:"direction"},locationLatitude:{control:{step:.001,type:"number",value:userMarker.location[1]},name:"location.latitude"},locationLongitude:{control:{step:.001,type:"number",value:userMarker.location[0]},name:"location.longitude"}},render:args=>(void 0!==args.accuracy&&(userMarker.accuracy=args.accuracy),void 0!==args.direction&&(userMarker.direction=args.direction),void 0!==args.locationLatitude&&(userMarker.location[1]=args.locationLatitude),void 0!==args.locationLongitude&&(userMarker.location[0]=args.locationLongitude),addEventListener("DOMContentLoaded",update),'<div id="iotMap" style="width: 1280px; height: 720px"></div>')},__namedExportsOrder=["UserMarker"];UserMarker.parameters={...UserMarker.parameters,docs:{...UserMarker.parameters?.docs,source:{originalSource:'{\n  argTypes: {\n    accuracy: {\n      control: {\n        step: 20,\n        type: "number",\n        value: userMarker.accuracy\n      },\n      name: "accuracy"\n    },\n    direction: {\n      control: {\n        max: 360,\n        min: 0,\n        step: 10,\n        type: "range",\n        value: userMarker.direction\n      },\n      name: "direction"\n    },\n    locationLatitude: {\n      control: {\n        step: 0.001,\n        type: "number",\n        value: userMarker.location[1]\n      },\n      name: "location.latitude"\n    },\n    locationLongitude: {\n      control: {\n        step: 0.001,\n        type: "number",\n        value: userMarker.location[0]\n      },\n      name: "location.longitude"\n    }\n  },\n  render: args => {\n    if (undefined !== args.accuracy) {\n      userMarker.accuracy = args.accuracy;\n    }\n    if (undefined !== args.direction) {\n      userMarker.direction = args.direction;\n    }\n    if (undefined !== args.locationLatitude) {\n      userMarker.location[1] = args.locationLatitude;\n    }\n    if (undefined !== args.locationLongitude) {\n      userMarker.location[0] = args.locationLongitude;\n    }\n    addEventListener("DOMContentLoaded", update);\n    return template;\n  }\n}',...UserMarker.parameters?.docs?.source}}}}}]);